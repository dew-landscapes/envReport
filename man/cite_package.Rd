% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cite_package.R
\name{cite_package}
\alias{cite_package}
\title{Cite a package}
\usage{
cite_package(
  package,
  brack = TRUE,
  startText = "",
  endText = "",
  bib_df = "refs",
  bib_file = here::here("report", "packages.bib"),
  sep = ";"
)
}
\arguments{
\item{package}{Character. Name of package.}

\item{brack}{Logical. If true, include brackets - '('ref')' - in output.}

\item{startText}{Character. Text to include before reference.}

\item{endText}{Character. Text to include after reference.}

\item{bib_df}{Dataframe of package citations, usually read in via
\code{bib2df::bib2df()}}

\item{bib_file}{Path to bibliography. Will be created if it doesn't exist.
\code{knitr::write_bib()}.}

\item{sep}{Character. What character to use to separate more than one
reference. Defaults to ';' which is needed for rmarkdown.}
}
\value{
Character string with appropriate markdown formatting to insert the
appropriate reference at that point in the text. If \code{bib_df} did not exist
when the function is called, \code{bib_df} is created in the global environment
and if \code{bib_file} did not exist it is created.
}
\description{
Default output is rmarkdown format.
}
\details{
\code{bib_df} and \code{bib_file} will be created if they don't currently exist.
}
\examples{
\dontrun{
library(envReport)
bib_file = tempfile()
cite_package("dplyr", bib_file = bib_file)
refs
rm(refs)
unlink(bib_file)
}
}
